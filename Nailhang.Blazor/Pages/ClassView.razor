@page "/classview/{Assembly}/{ClassName}/"

@using Nailhang.IndexBase.PublicApi

@inject Nailhang.IndexBase.PublicApi.IPublicApiStorage publicApiStorage

@if (assemblyItem == null || classItem == null)
{

}
else
{
    <p>
        <h2 class="h2-class">
            @classItem.Value.FullName
        </h2>

        @if (@classItem.Value.IsPublic)
        {
            <span class="badge badge-success">public</span>
        }
        else
        {
            <span class="badge badge-info">not public</span>
        }
        <br />
        <span class="sp_assembly">
            @assemblyItem.Value.FullName
        </span>
    </p>

    <ul>
        @foreach (var method in classItem.Value.Methods
   .OrderBy(w => w.Name)
   .ThenBy(w => w.ParametersString()))
        {
            <li>
                @if (method.IsPublic)
                {
                    <span class="public_modifier_span">public</span>
                }
                else
                {
                    <span class="notpublic_modifier_span">not public</span>
                }

                <span class="descr_result">@method.Returns</span>
                <span class="descr_method">@method.Name</span>
                @if (method.GenericParameters.Length > 0)
                {
                    <span class="descr_method">@(method.GenericsString(true))</span>
                }
                <span class="descr_parameters">(@(method.ParametersString()))</span>
            </li>
        }
    </ul>
}


@code {
    [Parameter]
    public string Assembly { get; set; }

    [Parameter]
    public string ClassName { get; set; }

    AssemblyPublic? assemblyItem = null;
    Class? classItem = null;

    protected override async Task OnInitializedAsync()
    {
        this.assemblyItem = await Task.Factory.StartNew(() => publicApiStorage.FindByShortName(Assembly).FirstOrDefault());
        if (assemblyItem != null)
        {
            var classes = publicApiStorage.LoadClasses(assemblyItem.Value.Id);
            this.classItem = classes.First(c => c.FullName == ClassName);
        }
    }
}
