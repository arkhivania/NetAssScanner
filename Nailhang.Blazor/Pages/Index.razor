@page "/"

@using Nailhang.Blazor.Data
@inject NailhangModulesService NailhangModulesService

<h1>Модули:</h1>

@if (namespaces == null || displayModules == null)
{
    <p><em>Загрузка списка модулей...</em></p>
}
else
{
    <div class="form-row">
        <div class="col">
            <label class="col-form-label">Пространство имен</label>
            <select class="form-control" @onchange="@UpdateModules">
                @foreach (var ns in namespaces)
                {
                    <option value=@ns>@ns</option>
                }
            </select>
        </div>
    </div>

    <p class="little-text">
        Всего модулей: @displayModules.Length
    </p>
    <div class="module-columns">

        <ul>
            @foreach (var m in displayModules.OrderBy(w => w.Module.FullName))
            {
                <li title="@m.Module.Description">
                    <NavLink href=@("module/?module=" + @m.Module.FullName)>
                        @m.Module.FullName
                    </NavLink>
                </li>
            }
        </ul>
    </div>
}

@code {
    string[] namespaces;
    Nailhang.Display.Models.ModuleModel[] allModules;
    Nailhang.Display.Models.ModuleModel[] displayModules;

    protected override async Task OnInitializedAsync()
    {
        if (namespaces == null)
            namespaces = await Task.Run(() => NailhangModulesService.GetNamespaces());
        if (allModules == null)
            allModules = await Task.Run(() => NailhangModulesService.GetModules(""));

        displayModules = allModules;
    }

    private void UpdateModules(ChangeEventArgs e)
    {
        var selectedNamespace = e.Value.ToString().ToLower();
        displayModules = allModules.Where(w => w.Module.FullName.ToLower().StartsWith(selectedNamespace)).ToArray();
    }
}
