@page "/"

@using Nailhang.Blazor.Data
@inject NailhangModulesService NailhangModulesService

<h1>Список модулей</h1>

@if (namespaces == null || loadedModules == null)
{
    <p><em>Загрузка...</em></p>
}
else
{
    <div>
        <p>Пространство имен</p>
        <select @onchange="@UpdateModules">
            @foreach (var ns in namespaces)
            {
                <option value=@ns>@ns</option>
            }
        </select>
    </div>

    <h2>Модули</h2>
    <div class="module-columns">

        <ul>
            @foreach (var m in loadedModules.OrderBy(w => w.Module.FullName))
            {
                <li title="@m.Module.Description">
                    @m.Module.FullName
                    @*@Html.ActionLink(m.Module.FullName, "Index", "Module", new { module = @m.Module.FullName }, null)*@
                </li>
            }
        </ul>
    </div>

    <p class="interface-name">
        Всего модулей: @loadedModules.Length
    </p>
}

@code {
    string[] namespaces;
    
    Nailhang.Display.Models.ModuleModel[] loadedModules;
    string selectedNamespace = "";

    protected override async Task OnInitializedAsync()
    {
        namespaces = await NailhangModulesService.GetNamespaces();
        loadedModules = await NailhangModulesService.GetModules(selectedNamespace);
    }

    private async Task UpdateModules(ChangeEventArgs e)
    {
        selectedNamespace = e.Value.ToString();
        loadedModules = await NailhangModulesService.GetModules(selectedNamespace);
    }
}
