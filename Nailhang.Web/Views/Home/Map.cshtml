@model Nailhang.Web.Models.IndexModel

<script src="@Url.Content("~/Scripts/raphael-min.js")"></script>
<script src="@Url.Content("~/Scripts/dracula_graffle.js")"></script>
<script src="@Url.Content("~/Scripts/dracula_graph.js")"></script>
<script src="@Url.Content("~/Scripts/dracula_algorithms.js")"></script>


@{
    ViewBag.Title = "Map";
}

<h2>Карта модулей</h2>

@using (Html.BeginForm())
{
    @Html.Hidden("formUpdate", true)
    <br />
    <div>
        Пространство имен
        @Html.DropDownListFor(w => w.SelectedRoot, Model.RootNamespaces)
    </div>
    <br />

    <input type="submit" value="Обновить" />
}

<div id="canvas" class="draw-div"></div>

<script type="text/javascript">
        window.onload = function () {

            var width = document.getElementById('canvas').offsetWidth;
            var height = 800;

            var g = new Graph();

            @foreach (var m in Model.Modules)
            {
                foreach (var di in m.DependencyItems.Where(d => d.Module != null))
                {
                    <text>
                    g.addEdge("@m.Module.FullName", "@di.Module");
                    </text>
                }

            }

            /* layout the graph using the Spring layout implementation */
            var layouter = new Graph.Layout.Spring(g);
            layouter.layout();

            ///* draw the graph using the RaphaelJS draw implementation */

            ///* calculating the shortest paths via Bellman Ford */
            ////    bellman_ford(g, g.nodes["Berlin"]);

            ///* calculating the shortest paths via Dijkstra */
            //dijkstra(g, g.nodes["Berlin"]);

            ///* calculating the shortest paths via Floyd-Warshall */
            //floyd_warshall(g, g.nodes["Berlin"]);


            /* colourising the shortest paths and setting labels */
            for (e in g.edges) {
                if (g.edges[e].target.predecessor === g.edges[e].source || g.edges[e].source.predecessor === g.edges[e].target) {
                    g.edges[e].style.stroke = "#bfa";
                    g.edges[e].style.fill = "#56f";
                } else {
                    g.edges[e].style.stroke = "#aaa";
                }
            }

            var renderer = new Graph.Renderer.Raphael('canvas', g, width, height);
            renderer.draw();
        };

</script>
