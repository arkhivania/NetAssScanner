@model Nailhang.Web.Models.InterfaceModel

@{
    ViewBag.Title = "Interface:" + @Model.Name;
}

<div class="jumbotron">
    <div class="container">
        <h2>@Model.Name</h2>
        <br />
        </div>
</div>

@{var moduleInterfaceN = @Model.Interface;}
@if (moduleInterfaceN.HasValue)
{
    var moduleInterface = moduleInterfaceN.Value;

    <h3>Сигнатура</h3>
    @if (moduleInterface.Methods != null && moduleInterface.Methods.Length > 0)
                {
        <ul>
            @foreach (var meth in moduleInterface.Methods)
            {
                <li>
                    <p class="method-name">@meth.MethodString</p>
                    @if (meth.InvocationRestriction != null)
                    {
                        <p class="method-restriction">@meth.InvocationRestriction.Value</p>
                    }
                </li>
            }
        </ul>
    }
        }

<h3>Привязывают модули:</h3>

<div class="container">
    <ul>
        @foreach (var s in Model.InterfaceModules.OrderBy(w => w.Module.FullName))
            {
            <li>
                @Html.ActionLink(s.Module.FullName, "Index", "Module", new { module = s.Module.FullName }, null)
                <br/>
                <span class="little-text">
                    Сборка: @s.Module.Assembly
                </span>
            </li>
        }
    </ul>
</div>


    <h3>Зависят модули:</h3>

    <ul>
        @foreach (var s in Model.ModulesWithInterfaceDependencies.OrderBy(w => w.Module.FullName))
            {
            <li>
                @Html.ActionLink(s.Module.FullName, "Index", "Module", new { module = s.Module.FullName }, null)
                <span class="label label-info">
                    (@s.Module.Assembly)
                </span>
</li>
        }
    </ul>

